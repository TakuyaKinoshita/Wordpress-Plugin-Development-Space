server {
    listen ${NGINX_PORT};
    server_name ${NGINX_SERVER_NAME};

    root ${NGINX_ROOT_DIR};
    index index.php;
    
    access_log  ${NGINX_LOG_DIR}/access.log  main;
    error_log ${NGINX_LOG_DIR}/error.log;

    # Vue.jsアプリケーションへのリバースプロキシ設定
    location /${VUE_ROOT_DIR} {
        proxy_pass http://node:${VUE_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WordPressのダイナミックファイルの設定
    location /${WORDPRESS_INSTALL_DIR} {
        try_files $uri $uri/ /${WORDPRESS_INSTALL_DIR}/index.php?$args;
    }
    
    # WordPressの静的ファイルのキャッシュ設定
    location ~* \.(jpg|jpeg|gif|png|svg|css|js|ico)$ {
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
    }
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass http://wordpress:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_script_name;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        }

        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        }

        # 必要に応じて追加のFastCGIパラメータを設定
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_param DOCUMENT_URI $document_uri;
        fastcgi_param DOCUMENT_ROOT $document_root;
        fastcgi_param SERVER_PROTOCOL $server_protocol;
        fastcgi_param GATEWAY_INTERFACE CGI/1.1;
        fastcgi_param SERVER_SOFTWARE nginx/$nginx_version;
        fastcgi_param REMOTE_ADDR $remote_addr;
        fastcgi_param REMOTE_PORT $remote_port;
        fastcgi_param SERVER_ADDR $server_addr;
        fastcgi_param SERVER_PORT $server_port;
        fastcgi_param SERVER_NAME $server_name;
        fastcgi_param HTTPS $https;

        # PHP固有の設定 (PHP-FPM用)
        fastcgi_param PHP_VALUE "display_errors=off";

        # リクエストがWordPressであることを示すカスタムヘッダーを追加
        add_header X-WordPress-Proxy "true";
    }
    # WordPressのアップロードされたファイルの配信設定
    location /${WORDPRESS_INSTALL_DIR}/wp-content/uploads/ {
        alias ${NGINX_ROOT_DIR}/${WORDPRESS_INSTALL_DIR}/wp-content/uploads/;
        autoindex off;
    }
    # ダイレクトアクセスへの404エラーを防止するための設定
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    # その他の静的ファイルへの配信設定
    location / {
        root ${NGINX_ROOT_DIR};
        index index.php index.html index.htm;
    }

    # Additional Nginx configurations...
}