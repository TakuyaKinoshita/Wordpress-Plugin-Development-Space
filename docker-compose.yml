version: '3.9'
services:
  mysql:
    container_name: ${PREFIX}_db
    image: mysql:${MYSQL_VERSION}
    volumes:
      - type: volume
        source: db-data
        target: /var/lib/mysql
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
      MYSQL_USER: ${MYSQL_DATABASE_USER}
      MYSQL_PASSWORD: ${MYSQL_DATABESE_PASSWORD}
    restart: unless-stopped
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    networks:
      - app-network
  nginx:
    container_name: ${PREFIX}_nginx
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
      args:
        - APP_ENV=${APP_ENV}
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}
    env_file: .env
    volumes:
      - ./src/backend:${NGINX_ROOT_DIR}/${WORDPRESS_INSTALL_DIR}
      - ./src/frontend:${NGINX_ROOT_DIR}/${VUE_ROOT_DIR}
      - type: bind
        source: ./docker/nginx/logs
        target: ${NGINX_LOG_DIR}
    depends_on:
      - wordpress
      - node
    networks:
      - app-network
  node:
    container_name: ${PREFIX}_node
    build:
      context: .
      dockerfile: docker/node/Dockerfile
      args:
        - APP_ENV=${APP_ENV}
    env_file: .env
    tty: true
    volumes:
      - ./src/frontend:${NGINX_ROOT_DIR}/${VUE_ROOT_DIR}
    networks:
      - app-network
  wordpress:
    build: 
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ${PREFIX}_web
    env_file:
      - .env
      - ./docker/php/wordpress.core.env
      - ./docker/php/wordpress.${WORDPRESS_DEVELOP_MODE}.env
    depends_on:
      - mysql
    volumes:
      - ./src/backend/:${NGINX_ROOT_DIR}/${WORDPRESS_INSTALL_DIR}
    environment:
      WORDPRESS_DB_HOST: ${MYSQL_HOST_NAME}:${MYSQL_PORT} # DBのポートとイメージを指定する
      WORDPRESS_DB_USER: ${MYSQL_DATABASE_USER} # MYSQL_USER
      WORDPRESS_DB_PASSWORD: ${MYSQL_DATABESE_PASSWORD} # MYSQL_PASSWORD
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE_NAME} # MYSQL_DATABASE
    networks:
      - app-network
    expose:
      - ${WORDPRESS_PORT}
    command: ["dockerize", "-wait", "tcp://${MYSQL_HOST_NAME}:${MYSQL_PORT}", "-timeout", "60s", "/usr/local/bin/wp-install.sh"]

networks:
  app-network:
volumes:
  db-data:
